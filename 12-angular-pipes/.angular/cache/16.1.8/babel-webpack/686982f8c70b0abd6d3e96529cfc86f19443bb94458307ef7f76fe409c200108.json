{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass FilterPipe {\n  transform(list, filterBy) {\n    if (filterBy.toLowerCase() === \"all\" || filterBy === \"\" || filterBy.length === 0) {\n      return list;\n    } else {\n      return list.filter(std => std.gender.toLowerCase() === filterBy.toLowerCase());\n    }\n  }\n}\n_class = FilterPipe;\n_class.ɵfac = function FilterPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filter\",\n  type: _class,\n  pure: true\n});\nexport { FilterPipe };","map":{"version":3,"names":["FilterPipe","transform","list","filterBy","toLowerCase","length","filter","std","gender","pure"],"sources":["D:\\Angular-Dev\\Projects\\12-angular-pipes\\src\\app\\Pipes\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { Student } from \"../Models/Student\";\r\n\r\n@Pipe({\r\n  name: \"filter\",\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(list: Student[], filterBy: string) {\r\n    if (\r\n      filterBy.toLowerCase() === \"all\" ||\r\n      filterBy === \"\" ||\r\n      filterBy.length === 0\r\n    ) {\r\n      return list;\r\n    } else {\r\n      return list.filter(\r\n        (std) => std.gender.toLowerCase() === filterBy.toLowerCase()\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAGA,MAGaA,UAAU;EACrBC,SAASA,CAACC,IAAe,EAAEC,QAAgB;IACzC,IACEA,QAAQ,CAACC,WAAW,EAAE,KAAK,KAAK,IAChCD,QAAQ,KAAK,EAAE,IACfA,QAAQ,CAACE,MAAM,KAAK,CAAC,EACrB;MACA,OAAOH,IAAI;KACZ,MAAM;MACL,OAAOA,IAAI,CAACI,MAAM,CACfC,GAAG,IAAKA,GAAG,CAACC,MAAM,CAACJ,WAAW,EAAE,KAAKD,QAAQ,CAACC,WAAW,EAAE,CAC7D;;EAEL;;SAbWJ,UAAU;;mBAAVA,MAAU;AAAA;;;QAAVA,MAAU;EAAAS,IAAA;AAAA;SAAVT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}